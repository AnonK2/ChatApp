/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chatapp;

import chatapp.Utils.Client.ChatClient;
import chatapp.Utils.ClientInfo;
import chatapp.Utils.Server.ChatServer;
import java.io.IOException;
import java.net.InetAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;
import java.util.concurrent.Executor;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author kennywang
 */
public class MainJF extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public MainJF() {
        initComponents();
        
        localhostRBtn.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        serverRBtnGroup = new javax.swing.ButtonGroup();
        serverBtn = new javax.swing.JButton();
        clientBtn = new javax.swing.JButton();
        IPAddressTF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        portTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        usernameTF = new javax.swing.JTextField();
        IPAddressRBtn = new javax.swing.JRadioButton();
        localhostRBtn = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(373, 285));
        setMinimumSize(new java.awt.Dimension(373, 285));
        setPreferredSize(new java.awt.Dimension(373, 285));
        setResizable(false);
        setSize(new java.awt.Dimension(373, 285));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        serverBtn.setText("Server");
        serverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverBtnActionPerformed(evt);
            }
        });
        getContentPane().add(serverBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 290, 76));

        clientBtn.setText("Client");
        clientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientBtnActionPerformed(evt);
            }
        });
        getContentPane().add(clientBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 121, 290, 41));
        getContentPane().add(IPAddressTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 190, -1));

        jLabel1.setText("IP Address: ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 173, -1, -1));

        jLabel2.setText("Port: ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 70, -1));
        getContentPane().add(portTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 190, -1));

        jLabel3.setText("Username: ");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 70, -1));
        getContentPane().add(usernameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, 190, -1));

        serverRBtnGroup.add(IPAddressRBtn);
        IPAddressRBtn.setText("IP Address");
        getContentPane().add(IPAddressRBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, -1, -1));

        serverRBtnGroup.add(localhostRBtn);
        localhostRBtn.setText("Localhost");
        getContentPane().add(localhostRBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private boolean validateFields() {
        if (IPAddressTF.getText().isEmpty()) {
            showErrorJDWithOption(1);
            return false;
        } else if (portTF.getText().isEmpty()) {
            showErrorJDWithOption(2);
            return false;
        } else if (usernameTF.getText().isEmpty()) {
            showErrorJDWithOption(3);
            return false;
        }
        
        return true;
    }
    
    private void showErrorJDWithOption(int option) {
        String message = null;
        
        switch(option) {
            case 1:
                message = "Mohon periksa kembali kolom IP Address";
                break;
            case 2:
                message = "Mohon periksa kembali kolom port";
                break;
            case 3:
                message = "Mohon periksa kembali kolom username";
                break;
            default:
                message = "Mohon periksa kembali data yang anda isi";
                break;
        }
        
        new ConfirmOneOptionJD(message).setVisible(true);
    }
    
    
    private void serverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverBtnActionPerformed
        ServerSocket serverSocket = null;
        boolean isLocal = localhostRBtn.isSelected();
        
        try {
            serverSocket = ChatServer.Server(isLocal ? InetAddress.getByName("localhost") : InetAddress.getLocalHost(), 22222);
        } catch (IOException e) {
            e.printStackTrace();
            return;
        }
        
        IPAddressTF.setText(serverSocket.getInetAddress().getHostAddress());
        portTF.setText(String.valueOf(serverSocket.getLocalPort()));
        
        IPAddressTF.setEditable(false);
        portTF.setEditable(false);
        
    }//GEN-LAST:event_serverBtnActionPerformed

    private void clientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientBtnActionPerformed
        if (!validateFields())
            return;
        
        ClientInfo clientInfo = null;
        
        try {
            
            //        ExecutorService pool = Executors.newFixedThreadPool(1);
//        pool.submit(new ChatClient(IPAddressTF.getText(), Integer.valueOf(portTF.getText()), usernameTF.getText()));
            clientInfo = new ChatClient(IPAddressTF.getText(), Integer.valueOf(portTF.getText()), usernameTF.getText()).instantiate();
            
            new PublicChatJF(clientInfo).setVisible(true);
            this.dispose();
        
        } catch (IOException e) {
            
            showErrorJDWithOption(0);
            e.printStackTrace();
        }
    }//GEN-LAST:event_clientBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJF().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton IPAddressRBtn;
    private javax.swing.JTextField IPAddressTF;
    private javax.swing.JButton clientBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton localhostRBtn;
    private javax.swing.JTextField portTF;
    private javax.swing.JButton serverBtn;
    private javax.swing.ButtonGroup serverRBtnGroup;
    private javax.swing.JTextField usernameTF;
    // End of variables declaration//GEN-END:variables
}
